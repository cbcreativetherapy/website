{"version":3,"sources":["webpack:///./src/utils/usePagination.js","webpack:///./src/components/GridPagination.js","webpack:///./src/components/PreviewCard.js","webpack:///./src/pages/blog.js"],"names":["usePagination","items","itemsPerPage","useState","currentPage","setCurrentPage","maxPage","Math","ceil","length","currentPageNum","min","max","begin","end","slice","GalleryPaginationStyles","styled","div","GridPagination","previous","next","prevPageNum","nextPageNum","className","type","onClick","PreviewCardStyles","PreviewCard","post","to","slug","current","fluid","heroImage","imageFile","asset","alt","imageAltText","postTitle","publishDate","author","href","authorLink","target","rel","BlogStyles","Blog","data","allPosts","allCategories","blogPage","blogPosts","nodes","categories","currentItems","SEO","title","metaContent","description","children","text","image","src","pageTitle","categoryHeading","map","category","key","_id","categoryName","CtaBanner","bannerHeading","ctaBannerReference","heading","bannerText","subHeading"],"mappings":"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","file":"component---src-pages-blog-js-76e500cfd8a809374175.js","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction usePagination(items, itemsPerPage) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const maxPage = Math.ceil(items.length / itemsPerPage);\r\n\r\n  function next() {\r\n    setCurrentPage((currentPageNum) => Math.min(currentPageNum + 1, maxPage));\r\n  }\r\n\r\n  function previous() {\r\n    setCurrentPage((currentPageNum) => Math.max(currentPageNum - 1, 1));\r\n  }\r\n\r\n  function currentItems() {\r\n    const begin = (currentPage - 1) * itemsPerPage;\r\n    const end = begin + itemsPerPage;\r\n    return items.slice(begin, end);\r\n  }\r\n\r\n  return [next, previous, currentItems, currentPage, maxPage];\r\n}\r\n\r\nexport default usePagination;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HiChevronRight, HiChevronLeft } from 'react-icons/hi';\r\n\r\nconst GalleryPaginationStyles = styled.div`\r\n  .pagination {\r\n    margin: 4rem auto;\r\n    ul {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      li {\r\n        margin: 0 2rem;\r\n      }\r\n    }\r\n    button {\r\n      background-color: var(--main-bg);\r\n      border: 2px solid var(--text-color);\r\n      border-radius: 50%;\r\n      width: 50px;\r\n      height: 50px;\r\n      font-size: 4rem;\r\n      cursor: pointer;\r\n      transition: background-color 0.4s;\r\n      &:hover,\r\n      &:focus {\r\n        background-color: var(--accent-blue);\r\n        transition: background-color 0.4s;\r\n      }\r\n    }\r\n    .chevron-left {\r\n      position: relative;\r\n      left: -7px;\r\n      top: 3px;\r\n    }\r\n    .chevron-right {\r\n      position: relative;\r\n      left: -3px;\r\n      top: 3px;\r\n    }\r\n    .page-numbers {\r\n      font-size: 3rem;\r\n    }\r\n    .current-page {\r\n      position: relative;\r\n      z-index: 10;\r\n    }\r\n    .current-page::after {\r\n      content: '';\r\n      border: 2px solid var(--accent-blue);\r\n      width: 50px;\r\n      height: 50px;\r\n      border-radius: 50%;\r\n      position: absolute;\r\n      left: -18px;\r\n      top: -7px;\r\n      z-index: -1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function GridPagination({\r\n  currentPage,\r\n  previous,\r\n  next,\r\n  maxPage,\r\n}) {\r\n  const prevPageNum = currentPage - 1;\r\n  const nextPageNum = currentPage + 1;\r\n  return (\r\n    <GalleryPaginationStyles>\r\n      {maxPage > 1 && (\r\n        <div className=\"pagination\">\r\n          <ul>\r\n            <li>\r\n              <button type=\"button\" onClick={previous}>\r\n                <HiChevronLeft className=\"chevron-left\" />\r\n              </button>\r\n            </li>\r\n            {prevPageNum !== 0 && (\r\n              <li className=\"page-numbers\">{prevPageNum}</li>\r\n            )}\r\n            <li className=\"page-numbers current-page\">{currentPage}</li>\r\n            {currentPage !== maxPage && (\r\n              <li className=\"page-numbers\">{nextPageNum}</li>\r\n            )}\r\n            <li>\r\n              <button type=\"button\" onClick={next}>\r\n                <HiChevronRight className=\"chevron-right\" />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </GalleryPaginationStyles>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nconst PreviewCardStyles = styled.div`\r\n  background-color: var(--accent-coral);\r\n  @supports not (grid-template-rows: subgrid) {\r\n    grid-template-rows: 300px auto auto auto;\r\n    @media (max-width: 420px) {\r\n      grid-template-rows: 150px auto auto auto;\r\n    }\r\n  }\r\n  display: grid;\r\n  grid-template-rows: subgrid;\r\n  grid-row: span 4;\r\n  grid-gap: 1rem;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 0px 0px white;\r\n  transition: box-shadow 0.4s;\r\n  &:hover,\r\n  &:focus-within {\r\n    box-shadow: 7px 7px 5px var(--grey-bg);\r\n    transition: box-shadow 0.4s;\r\n\r\n    .post-title::after {\r\n      width: 95%;\r\n      transition: width 0.4s;\r\n    }\r\n  }\r\n\r\n  .picture-link {\r\n    display: inherit;\r\n  }\r\n  .post-title {\r\n    width: 100%;\r\n    margin-bottom: -1.5rem;\r\n    font-size: 2.5rem;\r\n    padding: 0 2rem;\r\n    align-self: center;\r\n    display: inherit;\r\n    position: relative;\r\n    z-index: 10;\r\n    text-decoration: underline solid transparent;\r\n    transition: text-decoration 0.4s;\r\n    &::after {\r\n      content: '';\r\n      height: 100%;\r\n      width: 0;\r\n      background-color: var(--main-bg);\r\n      opacity: 0.4;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 10px;\r\n      z-index: -1;\r\n      border-radius: 4px;\r\n      transition: width 0.4s;\r\n    }\r\n    &:hover,\r\n    &:focus {\r\n      text-decoration: underline solid var(--text-color);\r\n      transition: text-decoration 0.4s;\r\n    }\r\n  }\r\n  .post-date,\r\n  .author {\r\n    font-size: 1.4rem;\r\n    padding: 0 2rem 1.5rem;\r\n  }\r\n  .post-date {\r\n    padding-bottom: 0;\r\n    align-self: end;\r\n  }\r\n  .author {\r\n    text-decoration: underline solid transparent;\r\n    transition: text-decoration 0.4s;\r\n    &:hover,\r\n    &:focus {\r\n      text-decoration: underline solid var(--text-color);\r\n      transition: text-decoration 0.4s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function PreviewCard({ post }) {\r\n  return (\r\n    <PreviewCardStyles>\r\n      <Link to={`/post/${post.slug.current}`} className=\"picture-link\">\r\n        <Img\r\n          fluid={post.heroImage.imageFile.asset.fluid}\r\n          alt={post.heroImage.imageAltText}\r\n        />\r\n      </Link>\r\n      <Link to={`/post/${post.slug.current}`} className=\"post-title\">\r\n        <h2>{post.postTitle}</h2>\r\n      </Link>\r\n      <p className=\"post-date\">{post.publishDate}</p>\r\n      {post.author ? (\r\n        <a\r\n          className=\"author\"\r\n          href={post.authorLink}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >{`Written by ${post.author}`}</a>\r\n      ) : (\r\n        <Link to=\"/about\" className=\"author\">\r\n          Written by Cassandra Brennan\r\n        </Link>\r\n      )}\r\n    </PreviewCardStyles>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nimport SEO from '../components/SEO';\r\nimport PreviewCard from '../components/PreviewCard';\r\nimport usePagination from '../utils/usePagination';\r\nimport GridPagination from '../components/GridPagination';\r\nimport CtaBanner from '../components/CtaBanner';\r\n\r\nconst BlogStyles = styled.div`\r\n  h1 {\r\n    background-color: var(--grey-bg);\r\n    display: inline-block;\r\n    padding: 2rem 3rem;\r\n    border-radius: 2px;\r\n    font-size: 4.5rem;\r\n    @media (max-width: 450px) {\r\n      font-size: 4rem;\r\n    }\r\n    @media (max-width: 407px) {\r\n      font-size: 3.4rem;\r\n      padding: 1.5rem 1rem;\r\n    }\r\n  }\r\n  .category-heading {\r\n    margin: 2rem auto;\r\n    .wrapper {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    .categories {\r\n      max-width: 500px;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: flex-end;\r\n      @media (max-width: 975px) {\r\n        max-width: 100%;\r\n        justify-content: flex-start;\r\n      }\r\n      a {\r\n        font-size: 1.6rem;\r\n        padding: 1rem;\r\n      }\r\n      .guide-text {\r\n        width: 100%;\r\n        text-align: right;\r\n        margin-right: 1rem;\r\n        font-size: 2rem;\r\n        @media (max-width: 975px) {\r\n          text-align: left;\r\n        }\r\n        @media (max-width: 450px) {\r\n          font-size: 1.6rem;\r\n        }\r\n      }\r\n      .category-link {\r\n        text-decoration: underline solid transparent;\r\n        transition: text-decoration 0.4s;\r\n        @media (max-width: 450px) {\r\n          font-size: 1.4rem;\r\n        }\r\n        @media (max-width: 407px) {\r\n          font-size: 1.3rem;\r\n        }\r\n        &:hover,\r\n        &:focus {\r\n          text-decoration: underline solid var(--text-color);\r\n          transition: text-decoration 0.4s;\r\n        }\r\n        &[aria-current='page'] {\r\n          position: relative;\r\n          &::after {\r\n            content: '';\r\n            position: absolute;\r\n            height: 70%;\r\n            width: 100%;\r\n            left: 0px;\r\n            top: 6.5px;\r\n            background-color: var(--accent-blue);\r\n            z-index: -1;\r\n            border-radius: 3px;\r\n            opacity: 0.7;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .posts-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(285px, 1fr));\r\n    grid-auto-rows: 350px auto auto auto;\r\n    gap: 4rem;\r\n    @media (max-width: 420px) {\r\n      grid-auto-rows: 150px auto auto auto;\r\n    }\r\n    margin-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport default function Blog({ data }) {\r\n  const { allPosts, allCategories, blogPage } = data;\r\n  const blogPosts = allPosts.nodes;\r\n  const categories = allCategories.nodes;\r\n\r\n  const [next, previous, currentItems, currentPage, maxPage] = usePagination(\r\n    blogPosts,\r\n    9\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SEO\r\n        title={blogPage.metaContent.title}\r\n        description={blogPage.metaContent.description[0].children[0].text}\r\n        image={blogPage.metaContent.image.imageFile.asset.fluid.src}\r\n      />\r\n      <BlogStyles>\r\n        <section className=\"category-heading\">\r\n          <div className=\"wrapper\">\r\n            <h1>{blogPage.pageTitle}</h1>\r\n            <div className=\"categories\">\r\n              <p className=\"guide-text\">{blogPage.categoryHeading}</p>\r\n              <Link to=\"/blog\" className=\"category-link\">\r\n                All Posts\r\n              </Link>\r\n              {categories.map((category) => (\r\n                <Link\r\n                  to={`/blog/${category.slug.current}`}\r\n                  className=\"category-link\"\r\n                  key={category._id}\r\n                >\r\n                  <span>{category.categoryName}</span>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"wrapper\">\r\n          <section className=\"posts-grid\">\r\n            {currentItems().map((post) => (\r\n              <PreviewCard post={post} />\r\n            ))}\r\n          </section>\r\n        </div>\r\n        <GridPagination\r\n          currentPage={currentPage}\r\n          previous={previous}\r\n          next={next}\r\n          maxPage={maxPage}\r\n        />\r\n        <CtaBanner\r\n          bannerHeading={blogPage.ctaBannerReference.heading}\r\n          bannerText={blogPage.ctaBannerReference.subHeading}\r\n        />\r\n      </BlogStyles>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query BlogQuery($categoryName: [String]) {\r\n    allPosts: allSanityBlogPost(\r\n      filter: {\r\n        isPastOrToday: { eq: true }\r\n        category: { elemMatch: { categoryName: { in: $categoryName } } }\r\n      }\r\n      sort: { fields: publishDate, order: DESC }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        postTitle\r\n        postTagline\r\n        publishDate(formatString: \"MMMM D, YYYY\")\r\n        author\r\n        authorLink\r\n        slug {\r\n          current\r\n        }\r\n        heroImage {\r\n          imageFile {\r\n            asset {\r\n              fluid(maxWidth: 600) {\r\n                ...GatsbySanityImageFluid\r\n              }\r\n            }\r\n          }\r\n          imageAltText\r\n        }\r\n      }\r\n    }\r\n    allCategories: allSanityBlogCategory {\r\n      nodes {\r\n        _id\r\n        categoryName\r\n        slug {\r\n          current\r\n        }\r\n      }\r\n    }\r\n    blogPage: sanityGeneralBlogPage {\r\n      metaContent {\r\n        title\r\n        description {\r\n          children {\r\n            text\r\n          }\r\n        }\r\n        image {\r\n          imageFile {\r\n            asset {\r\n              fluid(maxWidth: 1200) {\r\n                ...GatsbySanityImageFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      pageTitle\r\n      categoryHeading\r\n      ctaBannerReference {\r\n        heading\r\n        subHeading\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}