{"version":3,"sources":["webpack:///./src/pages/response-art.js","webpack:///./src/components/ArtGalleryHero.js","webpack:///./src/utils/usePagination.js","webpack:///./src/components/GridPagination.js"],"names":["GalleryPageStyles","styled","div","ResponseArt","data","allArt","galleryPage","art","nodes","usePagination","next","previous","currentItems","currentPage","maxPage","title","metaContent","description","children","text","image","imageFile","asset","fluid","src","className","pageTitle","pageDescription","disclaimer","map","item","to","slug","current","name","alt","imageAltText","bannerHeading","ctaBannerReference","heading","bannerText","subHeading","ArtGalleryHeroStyles","section","ArtGalleryHero","items","itemsPerPage","useState","setCurrentPage","Math","ceil","length","currentPageNum","min","max","begin","end","slice","GalleryPaginationStyles","GridPagination","prevPageNum","nextPageNum","type","onClick"],"mappings":"4FAAA,iLAWMA,EAAoBC,IAAOC,IAAV,kFAAGD,CAAH,otBA8CR,SAASE,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAC5BC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YACVC,EAAMF,EAAOG,MAFyB,EAIiBC,YAC3DF,EACA,GAFKG,EAJqC,KAI/BC,EAJ+B,KAIrBC,EAJqB,KAIPC,EAJO,KAIMC,EAJN,KAS5C,OACE,oCACE,kBAAC,IAAD,CACEC,MAAOT,EAAYU,YAAYD,MAC/BE,YAAaX,EAAYU,YAAYC,YAAY,GAAGC,SAAS,GAAGC,KAChEC,MAAOd,EAAYU,YAAYI,MAAMC,UAAUC,MAAMC,MAAMC,MAE7D,kBAACxB,EAAD,KACE,yBAAKyB,UAAU,WACb,kBAAC,IAAD,CACEC,UAAWpB,EAAYoB,UACvBC,gBAAiBrB,EAAYqB,gBAAgB,GAAGT,SAAS,GAAGC,KAC5DS,WAAYtB,EAAYsB,aAE1B,6BAASH,UAAU,gBAChBb,IAAeiB,KAAI,SAACC,GAAD,OAClB,kBAAC,IAAD,CAAMC,GAAID,EAAKE,KAAKC,QAASR,UAAU,YACrC,yBAAKA,UAAU,YACb,4BAAKK,EAAKI,OAEZ,kBAAC,IAAD,CACEX,MAAOO,EAAKV,MAAMC,UAAUC,MAAMC,MAClCY,IAAKL,EAAKV,MAAMgB,oBAKxB,kBAAC,IAAD,CACEvB,YAAaA,EACbH,KAAMA,EACNC,SAAUA,EACVG,QAASA,MAIf,kBAAC,IAAD,CACEuB,cAAe/B,EAAYgC,mBAAmBC,QAC9CC,WAAYlC,EAAYgC,mBAAmBG,gB,kCCvGnD,2DAGMC,EAHN,UAG6BzC,EAAO0C,QAAV,0FAAG1C,CAAH,yaAsCX,SAAS2C,EAAT,GAIX,IAHFlB,EAGC,EAHDA,UACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,WAEA,OACE,kBAACc,EAAD,KACE,yBAAKjB,UAAU,oBACb,4BAAKC,GACL,2BAAIC,IAEN,uBAAGF,UAAU,cAAcG,M,oCCpDjC,gBAuBenB,IArBf,SAAuBoC,EAAOC,GAAe,IAAD,EACJC,mBAAS,GAAxClC,EADmC,KACtBmC,EADsB,KAEpClC,EAAUmC,KAAKC,KAAKL,EAAMM,OAASL,GAgBzC,MAAO,CAdP,WACEE,GAAe,SAACI,GAAD,OAAoBH,KAAKI,IAAID,EAAiB,EAAGtC,OAGlE,WACEkC,GAAe,SAACI,GAAD,OAAoBH,KAAKK,IAAIF,EAAiB,EAAG,OAGlE,WACE,IAAMG,GAAS1C,EAAc,GAAKiC,EAC5BU,EAAMD,EAAQT,EACpB,OAAOD,EAAMY,MAAMF,EAAOC,IAGU3C,EAAaC,K,kCCpBrD,mFAIM4C,EAA0BzD,IAAOC,IAAV,0FAAGD,CAAH,0sBAyDd,SAAS0D,EAAT,GAKX,IAJF9C,EAIC,EAJDA,YACAF,EAGC,EAHDA,SACAD,EAEC,EAFDA,KACAI,EACC,EADDA,QAEM8C,EAAc/C,EAAc,EAC5BgD,EAAchD,EAAc,EAClC,OACE,kBAAC6C,EAAD,KACG5C,EAAU,GACT,yBAAKW,UAAU,cACb,4BACE,4BACE,4BAAQqC,KAAK,SAASC,QAASpD,GAC7B,kBAAC,IAAD,CAAec,UAAU,mBAGZ,IAAhBmC,GACC,wBAAInC,UAAU,gBAAgBmC,GAEhC,wBAAInC,UAAU,6BAA6BZ,GAC1CA,IAAgBC,GACf,wBAAIW,UAAU,gBAAgBoC,GAEhC,4BACE,4BAAQC,KAAK,SAASC,QAASrD,GAC7B,kBAAC,IAAD,CAAgBe,UAAU","file":"component---src-pages-response-art-js-c6fdbc65df82d44a355b.js","sourcesContent":["import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nimport SEO from '../components/SEO';\r\nimport usePagination from '../utils/usePagination';\r\nimport GridPagination from '../components/GridPagination';\r\nimport ArtGalleryHero from '../components/ArtGalleryHero';\r\nimport CtaBanner from '../components/CtaBanner';\r\n\r\nconst GalleryPageStyles = styled.div`\r\n  .gallery-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(285px, 1fr));\r\n    gap: 4rem;\r\n    margin: 4rem auto;\r\n    justify-content: center;\r\n  }\r\n  .art-link {\r\n    height: 350px;\r\n    position: relative;\r\n    &:hover .art-name,\r\n    &:focus .art-name {\r\n      box-shadow: -10px 0px 0px var(--light-green);\r\n      opacity: 1;\r\n      transition: opacity 0.4s, box-shadow 0.4s;\r\n    }\r\n  }\r\n  .art-name {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 10;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    opacity: 0;\r\n    box-shadow: 0px 0px 0px var(--light-green);\r\n    transition: opacity 0.4s, box-shadow 0.4s;\r\n    h2 {\r\n      font-size: 4rem;\r\n      font-family: MontserratSemiBold;\r\n    }\r\n  }\r\n  .gatsby-image-wrapper {\r\n    height: 100%;\r\n    picture img {\r\n      object-position: top center !important;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ResponseArt({ data }) {\r\n  const { allArt, galleryPage } = data;\r\n  const art = allArt.nodes;\r\n\r\n  const [next, previous, currentItems, currentPage, maxPage] = usePagination(\r\n    art,\r\n    9\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SEO\r\n        title={galleryPage.metaContent.title}\r\n        description={galleryPage.metaContent.description[0].children[0].text}\r\n        image={galleryPage.metaContent.image.imageFile.asset.fluid.src}\r\n      />\r\n      <GalleryPageStyles>\r\n        <div className=\"wrapper\">\r\n          <ArtGalleryHero\r\n            pageTitle={galleryPage.pageTitle}\r\n            pageDescription={galleryPage.pageDescription[0].children[0].text}\r\n            disclaimer={galleryPage.disclaimer}\r\n          />\r\n          <section className=\"gallery-grid\">\r\n            {currentItems().map((item) => (\r\n              <Link to={item.slug.current} className=\"art-link\">\r\n                <div className=\"art-name\">\r\n                  <h2>{item.name}</h2>\r\n                </div>\r\n                <Img\r\n                  fluid={item.image.imageFile.asset.fluid}\r\n                  alt={item.image.imageAltText}\r\n                />\r\n              </Link>\r\n            ))}\r\n          </section>\r\n          <GridPagination\r\n            currentPage={currentPage}\r\n            next={next}\r\n            previous={previous}\r\n            maxPage={maxPage}\r\n          />\r\n        </div>\r\n      </GalleryPageStyles>\r\n      <CtaBanner\r\n        bannerHeading={galleryPage.ctaBannerReference.heading}\r\n        bannerText={galleryPage.ctaBannerReference.subHeading}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allArt: allSanityResponseArt(sort: { fields: sessionDate, order: DESC }) {\r\n      nodes {\r\n        name\r\n        sessionDate(formatString: \"YYYY\")\r\n        slug {\r\n          current\r\n        }\r\n        image {\r\n          imageAltText\r\n          imageFile {\r\n            asset {\r\n              fluid(maxWidth: 1200) {\r\n                ...GatsbySanityImageFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    galleryPage: sanityGeneralGalleryPage {\r\n      metaContent {\r\n        title\r\n        description {\r\n          children {\r\n            text\r\n          }\r\n        }\r\n        image {\r\n          imageFile {\r\n            asset {\r\n              fluid(maxWidth: 1200) {\r\n                ...GatsbySanityImageFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      pageTitle\r\n      pageDescription {\r\n        children {\r\n          text\r\n        }\r\n      }\r\n      disclaimer\r\n      ctaBannerReference {\r\n        heading\r\n        subHeading\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ArtGalleryHeroStyles = styled.section`\r\n  .background-color {\r\n    background-color: var(--grey-bg);\r\n    max-width: 650px;\r\n    padding: 2rem;\r\n    margin: 2rem 0 0.5rem;\r\n    margin-top: calc(2rem - 3px);\r\n    @media (max-width: 600px) {\r\n      padding: 1rem 2rem;\r\n    }\r\n\r\n    h1 {\r\n      margin-top: 0;\r\n      font-size: 4.5rem;\r\n    }\r\n    p {\r\n      font-size: 1.7rem;\r\n    }\r\n    @media (max-width: 600px) {\r\n      h1 {\r\n        font-size: 3.3rem;\r\n      }\r\n      p {\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n  }\r\n  .disclaimer {\r\n    margin-left: 2rem;\r\n    padding-right: 2rem;\r\n    @media (max-width: 600px) {\r\n      text-align: left;\r\n      padding-right: 2rem;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ArtGalleryHero({\r\n  pageTitle,\r\n  pageDescription,\r\n  disclaimer,\r\n}) {\r\n  return (\r\n    <ArtGalleryHeroStyles>\r\n      <div className=\"background-color\">\r\n        <h1>{pageTitle}</h1>\r\n        <p>{pageDescription}</p>\r\n      </div>\r\n      <p className=\"disclaimer\">{disclaimer}</p>\r\n    </ArtGalleryHeroStyles>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nfunction usePagination(items, itemsPerPage) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const maxPage = Math.ceil(items.length / itemsPerPage);\r\n\r\n  function next() {\r\n    setCurrentPage((currentPageNum) => Math.min(currentPageNum + 1, maxPage));\r\n  }\r\n\r\n  function previous() {\r\n    setCurrentPage((currentPageNum) => Math.max(currentPageNum - 1, 1));\r\n  }\r\n\r\n  function currentItems() {\r\n    const begin = (currentPage - 1) * itemsPerPage;\r\n    const end = begin + itemsPerPage;\r\n    return items.slice(begin, end);\r\n  }\r\n\r\n  return [next, previous, currentItems, currentPage, maxPage];\r\n}\r\n\r\nexport default usePagination;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HiChevronRight, HiChevronLeft } from 'react-icons/hi';\r\n\r\nconst GalleryPaginationStyles = styled.div`\r\n  .pagination {\r\n    margin: 4rem auto;\r\n    ul {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      li {\r\n        margin: 0 2rem;\r\n      }\r\n    }\r\n    button {\r\n      background-color: var(--main-bg);\r\n      border: 2px solid var(--text-color);\r\n      border-radius: 50%;\r\n      width: 50px;\r\n      height: 50px;\r\n      font-size: 4rem;\r\n      cursor: pointer;\r\n      transition: background-color 0.4s;\r\n      &:hover,\r\n      &:focus {\r\n        background-color: var(--accent-blue);\r\n        transition: background-color 0.4s;\r\n      }\r\n    }\r\n    .chevron-left {\r\n      position: relative;\r\n      left: -7px;\r\n      top: 3px;\r\n    }\r\n    .chevron-right {\r\n      position: relative;\r\n      left: -3px;\r\n      top: 3px;\r\n    }\r\n    .page-numbers {\r\n      font-size: 3rem;\r\n    }\r\n    .current-page {\r\n      position: relative;\r\n      z-index: 10;\r\n    }\r\n    .current-page::after {\r\n      content: '';\r\n      border: 2px solid var(--accent-blue);\r\n      width: 50px;\r\n      height: 50px;\r\n      border-radius: 50%;\r\n      position: absolute;\r\n      left: -18px;\r\n      top: -7px;\r\n      z-index: -1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function GridPagination({\r\n  currentPage,\r\n  previous,\r\n  next,\r\n  maxPage,\r\n}) {\r\n  const prevPageNum = currentPage - 1;\r\n  const nextPageNum = currentPage + 1;\r\n  return (\r\n    <GalleryPaginationStyles>\r\n      {maxPage > 1 && (\r\n        <div className=\"pagination\">\r\n          <ul>\r\n            <li>\r\n              <button type=\"button\" onClick={previous}>\r\n                <HiChevronLeft className=\"chevron-left\" />\r\n              </button>\r\n            </li>\r\n            {prevPageNum !== 0 && (\r\n              <li className=\"page-numbers\">{prevPageNum}</li>\r\n            )}\r\n            <li className=\"page-numbers current-page\">{currentPage}</li>\r\n            {currentPage !== maxPage && (\r\n              <li className=\"page-numbers\">{nextPageNum}</li>\r\n            )}\r\n            <li>\r\n              <button type=\"button\" onClick={next}>\r\n                <HiChevronRight className=\"chevron-right\" />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </GalleryPaginationStyles>\r\n  );\r\n}\r\n"],"sourceRoot":""}