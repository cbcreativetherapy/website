{"version":3,"sources":["webpack:///./src/pages/resources.js","webpack:///./src/components/HeroHeader.js"],"names":["ResourcesStyles","styled","div","Resources","resources","data","title","metaContent","description","children","text","image","imageFile","asset","fluid","src","h1Heading","heroParagraph","imageSrc","heroImage","sectionsArray","map","section","className","heading","blocks","_rawParagraph","bannerHeading","ctaBannerReference","bannerText","subHeading","HeroHeaderStyles","header","props","HeroHeader","centerHeading"],"mappings":"8FACA,6IAQMA,EAAkBC,IAAOC,IAAV,iFAAGD,CAAH,2bA6CN,SAASE,EAAT,GAA8B,IACnCC,EADkC,EAARC,KAC1BD,UACR,OACE,oCACE,kBAAC,IAAD,CACEE,MAAOF,EAAUG,YAAYD,MAC7BE,YAAaJ,EAAUG,YAAYC,YAAY,GAAGC,SAAS,GAAGC,KAC9DC,MAAOP,EAAUG,YAAYI,MAAMC,UAAUC,MAAMC,MAAMC,MAE3D,kBAACf,EAAD,KACE,kBAAC,IAAD,CACEgB,UAAWZ,EAAUY,UACrBC,cAAeb,EAAUa,cACzBC,SAAUd,EAAUe,UAAUP,UAAUC,MAAMC,MAAMC,MAErDX,EAAUgB,cAAcC,KAAI,SAACC,GAAD,OAC3B,6BAASC,UAAU,qBACjB,yBAAKA,UAAU,WACb,4BAAKD,EAAQE,SACb,kBAAC,IAAD,CAAcC,OAAQH,EAAQI,qBAIpC,kBAAC,IAAD,CACEC,cAAevB,EAAUwB,mBAAmBJ,QAC5CK,WAAYzB,EAAUwB,mBAAmBE,iB,kCC/EnD,2DAGMC,EAHN,UAGyB9B,EAAO+B,OAAV,mFAAG/B,CAAH,mpBAEA,SAACgC,GAAD,aAAkBA,EAAMtB,MAAxB,OAgEP,SAASuB,EAAT,GAKX,IAJFlB,EAIC,EAJDA,UACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,SAEC,IADDiB,qBACC,SACD,OACE,kBAACJ,EAAD,CAAkBpB,MAAOO,GACvB,yBAAKK,UAAU,WACb,yBAAKA,UAAWY,EAAgB,mBAAqB,aACnD,yBAAKZ,UAAU,kBACb,4BAAKP,GACJC,GAAiB,2BAAIA","file":"component---src-pages-resources-js-d331fed970bf4347dde2.js","sourcesContent":["import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport PortableText from '@sanity/block-content-to-react';\r\n\r\nimport HeroHeader from '../components/HeroHeader';\r\nimport SEO from '../components/SEO';\r\nimport CtaBanner from '../components/CtaBanner';\r\n\r\nconst ResourcesStyles = styled.div`\r\n  .resources-section {\r\n    margin: 0 auto;\r\n    padding: 6rem 10rem;\r\n    &:nth-of-type(even) {\r\n      background-color: var(--pale-grey-bg);\r\n    }\r\n    h2 {\r\n      font-size: 2.8rem;\r\n    }\r\n    p,\r\n    li {\r\n      font-size: 1.6rem;\r\n      line-height: 1.4;\r\n      margin-top: 1rem;\r\n      width: 80%;\r\n    }\r\n    li {\r\n      list-style: disc;\r\n      margin-left: 25px;\r\n    }\r\n    @media (max-width: 680px) {\r\n      &:nth-of-type(odd) {\r\n        margin-top: 1rem;\r\n      }\r\n    }\r\n    @media (max-width: 630px) {\r\n      padding: 4rem;\r\n      p {\r\n        width: 100%;\r\n      }\r\n    }\r\n    @media (max-width: 425px) {\r\n      padding: 4rem 2rem;\r\n      h2 {\r\n        font-size: 2.4rem;\r\n      }\r\n      p,\r\n      li {\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Resources({ data }) {\r\n  const { resources } = data;\r\n  return (\r\n    <>\r\n      <SEO\r\n        title={resources.metaContent.title}\r\n        description={resources.metaContent.description[0].children[0].text}\r\n        image={resources.metaContent.image.imageFile.asset.fluid.src}\r\n      />\r\n      <ResourcesStyles>\r\n        <HeroHeader\r\n          h1Heading={resources.h1Heading}\r\n          heroParagraph={resources.heroParagraph}\r\n          imageSrc={resources.heroImage.imageFile.asset.fluid.src}\r\n        />\r\n        {resources.sectionsArray.map((section) => (\r\n          <section className=\"resources-section\">\r\n            <div className=\"wrapper\">\r\n              <h2>{section.heading}</h2>\r\n              <PortableText blocks={section._rawParagraph} />\r\n            </div>\r\n          </section>\r\n        ))}\r\n        <CtaBanner\r\n          bannerHeading={resources.ctaBannerReference.heading}\r\n          bannerText={resources.ctaBannerReference.subHeading}\r\n        />\r\n      </ResourcesStyles>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    resources: sanityResources {\r\n      metaContent {\r\n        title\r\n        description {\r\n          children {\r\n            text\r\n          }\r\n        }\r\n        image {\r\n          imageAltText\r\n          imageFile {\r\n            asset {\r\n              fluid(maxWidth: 1200) {\r\n                ...GatsbySanityImageFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      h1Heading\r\n      heroParagraph\r\n      heroImage {\r\n        imageAltText\r\n        imageFile {\r\n          asset {\r\n            fluid(maxWidth: 1200) {\r\n              ...GatsbySanityImageFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n      sectionsArray {\r\n        heading\r\n        _rawParagraph\r\n      }\r\n      ctaBannerReference {\r\n        heading\r\n        subHeading\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeroHeaderStyles = styled.header`\r\n  height: 80vh;\r\n  background-image: ${(props) => `url(${props.image})`};\r\n  background-size: cover;\r\n  background-position: center;\r\n\r\n  .wrapper {\r\n    height: 100%;\r\n  }\r\n\r\n  .container,\r\n  .center-container {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    /* text-align: center; */\r\n  }\r\n\r\n  .center-container {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  .text-container {\r\n    background: var(--grey-bg);\r\n    padding: 2rem 4rem;\r\n    max-width: 600px;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 7rem;\r\n  }\r\n  p {\r\n    font-size: 1.8rem;\r\n    padding-left: 5px;\r\n    margin-top: 1.5rem;\r\n    line-height: 1.4;\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 568px) {\r\n    .container {\r\n      padding: 1rem 2rem;\r\n    }\r\n    .text-container {\r\n      padding: 1rem;\r\n    }\r\n    h1 {\r\n      font-size: 4rem;\r\n    }\r\n    p {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  @media (max-width: 360px) {\r\n    h1 {\r\n      font-size: 3rem;\r\n    }\r\n    p {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function HeroHeader({\r\n  h1Heading,\r\n  heroParagraph,\r\n  imageSrc,\r\n  centerHeading = false,\r\n}) {\r\n  return (\r\n    <HeroHeaderStyles image={imageSrc}>\r\n      <div className=\"wrapper\">\r\n        <div className={centerHeading ? 'center-container' : 'container'}>\r\n          <div className=\"text-container\">\r\n            <h1>{h1Heading}</h1>\r\n            {heroParagraph && <p>{heroParagraph}</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HeroHeaderStyles>\r\n  );\r\n}\r\n"],"sourceRoot":""}