{"version":3,"sources":["webpack:///./src/pages/our-services.js","webpack:///./src/components/HeroHeader.js"],"names":["OurServicesStyles","styled","div","About","max","count","ourServicesPage","data","numberOfSections","sectionsArray","length","sectionNumberCycle","title","metaContent","description","children","text","image","imageFile","asset","fluid","src","h1Heading","imageSrc","heroImage","heroParagraph","map","section","key","_key","className","heading","blocks","_rawParagraph","modalities","alt","imageAltText","bannerHeading","ctaBannerReference","bannerText","subHeading","HeroHeaderStyles","header","props","HeroHeader","centerHeading"],"mappings":"4FAAA,kKAUMA,EAAoBC,IAAOC,IAAV,kFAAGD,CAAH,suBA0ER,SAASE,EAAT,GAA+C,IAG/BC,EACvBC,EAJgCC,EAAqB,EAA7BC,KAAQD,gBAChCE,EAAmBF,EAAgBG,cAAcC,OAEjDC,GAAuBP,EAI1BI,EAHGH,EAAQ,EAEL,kBAAOA,IAAUD,EAAO,IAGjC,OACE,oCACE,kBAAC,IAAD,CACEQ,MAAON,EAAgBO,YAAYD,MACnCE,YACER,EAAgBO,YAAYC,YAAY,GAAGC,SAAS,GAAGC,KAEzDC,MAAOX,EAAgBO,YAAYI,MAAMC,UAAUC,MAAMC,MAAMC,MAEjE,kBAACrB,EAAD,KACE,kBAAC,IAAD,CACEsB,UAAWhB,EAAgBgB,UAC3BC,SAAUjB,EAAgBkB,UAAUN,UAAUC,MAAMC,MAAMC,IAC1DI,cAAenB,EAAgBmB,gBAEhCnB,EAAgBG,cAAciB,KAAI,SAACC,GAAD,OACjC,6BACEC,IAAKD,EAAQE,KACbC,UAAS,2BAA6BnB,KAEtC,yBAAKmB,UAAU,WACb,4BAAKH,EAAQI,SACb,kBAAC,IAAD,CAAcC,OAAQL,EAAQM,qBAIpC,6BAASH,UAAU,+BACjB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,4BAAKxB,EAAgB4B,WAAWH,SAChC,kBAAC,IAAD,CAAcC,OAAQ1B,EAAgB4B,WAAWD,iBAEnD,kBAAC,IAAD,CACEb,MAAOd,EAAgB4B,WAAWjB,MAAMC,UAAUC,MAAMC,MACxDe,IAAK7B,EAAgB4B,WAAWjB,MAAMmB,iBAI5C,kBAAC,IAAD,CACEC,cAAe/B,EAAgBgC,mBAAmBP,QAClDQ,WAAYjC,EAAgBgC,mBAAmBE,iB,kCCrIzD,2DAGMC,EAHN,UAGyBxC,EAAOyC,OAAV,mFAAGzC,CAAH,mpBAEA,SAAC0C,GAAD,aAAkBA,EAAM1B,MAAxB,OAgEP,SAAS2B,EAAT,GAKX,IAJFtB,EAIC,EAJDA,UACAG,EAGC,EAHDA,cACAF,EAEC,EAFDA,SAEC,IADDsB,qBACC,SACD,OACE,kBAACJ,EAAD,CAAkBxB,MAAOM,GACvB,yBAAKO,UAAU,WACb,yBAAKA,UAAWe,EAAgB,mBAAqB,aACnD,yBAAKf,UAAU,kBACb,4BAAKR,GACJG,GAAiB,2BAAIA","file":"component---src-pages-our-services-js-a7fc1662510f27fab3b8.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport styled from 'styled-components';\r\nimport PortableText from '@sanity/block-content-to-react';\r\n\r\nimport HeroHeader from '../components/HeroHeader';\r\nimport CtaBanner from '../components/CtaBanner';\r\nimport SEO from '../components/SEO';\r\n\r\nconst OurServicesStyles = styled.div`\r\n  .services-section {\r\n    padding: 6rem 10rem;\r\n    margin: 0 auto;\r\n    &:nth-of-type(even) {\r\n      background-color: var(--pale-grey-bg);\r\n    }\r\n\r\n    h2 {\r\n      font-size: 2.8rem;\r\n    }\r\n\r\n    p,\r\n    li {\r\n      font-size: 1.6rem;\r\n      line-height: 1.4;\r\n      margin-top: 1rem;\r\n      width: 80%;\r\n    }\r\n    @media (max-width: 630px) {\r\n      padding: 4rem;\r\n      p {\r\n        width: 100%;\r\n      }\r\n    }\r\n    @media (max-width: 425px) {\r\n      padding: 4rem 2rem;\r\n      h2 {\r\n        font-size: 2.4rem;\r\n      }\r\n      p,\r\n      li {\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n  }\r\n  .section1 {\r\n    margin-top: 4rem;\r\n    @media (max-width: 680px) {\r\n      margin-top: 1rem;\r\n    }\r\n  }\r\n  .section3 {\r\n    margin-bottom: 4rem;\r\n    @media (max-width: 680px) {\r\n      margin-bottom: 1rem;\r\n    }\r\n    li {\r\n      list-style: disc;\r\n      margin-left: 25px;\r\n    }\r\n  }\r\n  .modalities {\r\n    .wrapper {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    .text-container {\r\n      width: 50%;\r\n      @media (max-width: 800px) {\r\n        width: 100%;\r\n      }\r\n    }\r\n    .gatsby-image-wrapper {\r\n      width: 40%;\r\n      margin: 0 2rem 2rem;\r\n      @media (max-width: 800px) {\r\n        width: 100%;\r\n        margin: 2rem 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function About({ data: { ourServicesPage } }) {\r\n  const numberOfSections = ourServicesPage.sectionsArray.length;\r\n\r\n  const sectionNumberCycle = ((max) => {\r\n    let count = 0;\r\n    // eslint-disable-next-line no-plusplus\r\n    return () => (count++ % max) + 1;\r\n  })(numberOfSections);\r\n\r\n  return (\r\n    <>\r\n      <SEO\r\n        title={ourServicesPage.metaContent.title}\r\n        description={\r\n          ourServicesPage.metaContent.description[0].children[0].text\r\n        }\r\n        image={ourServicesPage.metaContent.image.imageFile.asset.fluid.src}\r\n      />\r\n      <OurServicesStyles>\r\n        <HeroHeader\r\n          h1Heading={ourServicesPage.h1Heading}\r\n          imageSrc={ourServicesPage.heroImage.imageFile.asset.fluid.src}\r\n          heroParagraph={ourServicesPage.heroParagraph}\r\n        />\r\n        {ourServicesPage.sectionsArray.map((section) => (\r\n          <section\r\n            key={section._key}\r\n            className={`services-section section${sectionNumberCycle()}`}\r\n          >\r\n            <div className=\"wrapper\">\r\n              <h2>{section.heading}</h2>\r\n              <PortableText blocks={section._rawParagraph} />\r\n            </div>\r\n          </section>\r\n        ))}\r\n        <section className=\"services-section modalities\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"text-container\">\r\n              <h2>{ourServicesPage.modalities.heading}</h2>\r\n              <PortableText blocks={ourServicesPage.modalities._rawParagraph} />\r\n            </div>\r\n            <Img\r\n              fluid={ourServicesPage.modalities.image.imageFile.asset.fluid}\r\n              alt={ourServicesPage.modalities.image.imageAltText}\r\n            />\r\n          </div>\r\n        </section>\r\n        <CtaBanner\r\n          bannerHeading={ourServicesPage.ctaBannerReference.heading}\r\n          bannerText={ourServicesPage.ctaBannerReference.subHeading}\r\n        />\r\n      </OurServicesStyles>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    ourServicesPage: sanityOurServices {\r\n      metaContent {\r\n        title\r\n        description {\r\n          children {\r\n            text\r\n          }\r\n        }\r\n        image {\r\n          imageFile {\r\n            asset {\r\n              fluid(maxWidth: 1200) {\r\n                ...GatsbySanityImageFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      h1Heading\r\n      heroImage {\r\n        imageFile {\r\n          asset {\r\n            fluid(maxWidth: 1200) {\r\n              ...GatsbySanityImageFluid\r\n            }\r\n          }\r\n        }\r\n        imageAltText\r\n      }\r\n      heroParagraph\r\n      sectionsArray {\r\n        _key\r\n        heading\r\n        _rawParagraph\r\n      }\r\n      modalities {\r\n        heading\r\n        _rawParagraph\r\n        image {\r\n          imageAltText\r\n          imageFile {\r\n            asset {\r\n              fluid(maxWidth: 1200) {\r\n                ...GatsbySanityImageFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      ctaBannerReference {\r\n        heading\r\n        subHeading\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeroHeaderStyles = styled.header`\r\n  height: 80vh;\r\n  background-image: ${(props) => `url(${props.image})`};\r\n  background-size: cover;\r\n  background-position: center;\r\n\r\n  .wrapper {\r\n    height: 100%;\r\n  }\r\n\r\n  .container,\r\n  .center-container {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    /* text-align: center; */\r\n  }\r\n\r\n  .center-container {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  .text-container {\r\n    background: var(--grey-bg);\r\n    padding: 2rem 4rem;\r\n    max-width: 600px;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 7rem;\r\n  }\r\n  p {\r\n    font-size: 1.8rem;\r\n    padding-left: 5px;\r\n    margin-top: 1.5rem;\r\n    line-height: 1.4;\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 568px) {\r\n    .container {\r\n      padding: 1rem 2rem;\r\n    }\r\n    .text-container {\r\n      padding: 1rem;\r\n    }\r\n    h1 {\r\n      font-size: 4rem;\r\n    }\r\n    p {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  @media (max-width: 360px) {\r\n    h1 {\r\n      font-size: 3rem;\r\n    }\r\n    p {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function HeroHeader({\r\n  h1Heading,\r\n  heroParagraph,\r\n  imageSrc,\r\n  centerHeading = false,\r\n}) {\r\n  return (\r\n    <HeroHeaderStyles image={imageSrc}>\r\n      <div className=\"wrapper\">\r\n        <div className={centerHeading ? 'center-container' : 'container'}>\r\n          <div className=\"text-container\">\r\n            <h1>{h1Heading}</h1>\r\n            {heroParagraph && <p>{heroParagraph}</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HeroHeaderStyles>\r\n  );\r\n}\r\n"],"sourceRoot":""}