{"version":3,"sources":["webpack:///./src/templates/BlogPost.js","webpack:///./src/components/HeroHeader.js"],"names":["BlogPostStyles","styled","div","BlogPost","post","data","serializers","types","block","props","node","style","blockquote","children","PortableText","defaultSerializers","title","postTitle","description","postDescription","image","heroImage","imageFile","asset","fluid","src","h1Heading","imageSrc","centerHeading","className","publishDate","author","to","authorLink","category","map","tag","key","_key","slug","current","categoryName","blocks","_rawPost","projectId","process","dataset","bannerHeading","ctaBannerReference","heading","HeroHeaderStyles","header","HeroHeader","heroParagraph"],"mappings":"8FAAA,qKAUMA,EAAiBC,IAAOC,IAAV,+EAAGD,CAAH,m9EA6LL,SAASE,EAAT,GAA6B,IAClCC,EADiC,EAARC,KACzBD,KACFE,EAAc,CAClBC,MAAO,CACLC,MAAO,SAACC,GAAW,IAAD,EACaA,EAAMC,KAA3BC,aADQ,MACA,SADA,EAYhB,MATyB,CACvBC,WACE,oCACE,2BACE,8BAAOH,EAAMI,aAMFF,IACjBG,IAAaC,mBAAmBR,MAAMC,MAAMC,MAKpD,OACE,oCACE,kBAAC,IAAD,CACEO,MAAOZ,EAAKa,UACZC,YAAad,EAAKe,gBAClBC,MAAOhB,EAAKiB,UAAUC,UAAUC,MAAMC,MAAMC,MAE9C,kBAACzB,EAAD,KACE,kBAAC,IAAD,CACE0B,UAAWtB,EAAKa,UAChBU,SAAUvB,EAAKiB,UAAUC,UAAUC,MAAMC,MAAMC,IAC/CG,eAAa,IAEf,6BAASC,UAAU,gBACjB,yBAAKA,UAAU,WACb,uBAAGA,UAAU,QAAQzB,EAAK0B,aACzB1B,EAAK2B,OACJ,uBAAGF,UAAU,UAAb,aACa,IACX,kBAAC,IAAD,CAAMG,GAAI5B,EAAK6B,WAAYJ,UAAU,QAClCzB,EAAK2B,SAIV,uBAAGF,UAAU,UAAb,aACa,IACX,kBAAC,IAAD,CAAMG,GAAG,SAASH,UAAU,QAA5B,sBAKJ,wBAAIA,UAAU,QACZ,wBAAIA,UAAU,OAAd,SACCzB,EAAK8B,SAASC,KAAI,SAACC,GAAD,OACjB,wBAAIC,IAAKD,EAAIE,MACX,kBAAC,IAAD,CAAMT,UAAU,WAAWG,GAAE,SAAWI,EAAIG,KAAKC,SAC9CJ,EAAIK,qBAOjB,6BAASZ,UAAU,aACjB,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMG,GAAG,gBAAgBH,UAAU,aACjC,kBAAC,IAAD,CAAaA,UAAU,eADzB,iBAKF,yBAAKA,UAAU,WACb,kBAAC,IAAD,CACEa,OAAQtC,EAAKuC,SACbrC,YAAaA,EACbsC,UAAWC,WACXC,QAAQ,iBAId,kBAAC,IAAD,CAAWC,cAAe3C,EAAK4C,mBAAmBC,c,kCCzR1D,2DAGMC,EAHN,UAGyBjD,EAAOkD,OAAV,mFAAGlD,CAAH,mpBAEA,SAACQ,GAAD,aAAkBA,EAAMW,MAAxB,OAgEP,SAASgC,EAAT,GAKX,IAJF1B,EAIC,EAJDA,UACA2B,EAGC,EAHDA,cACA1B,EAEC,EAFDA,SAEC,IADDC,qBACC,SACD,OACE,kBAACsB,EAAD,CAAkB9B,MAAOO,GACvB,yBAAKE,UAAU,WACb,yBAAKA,UAAWD,EAAgB,mBAAqB,aACnD,yBAAKC,UAAU,kBACb,4BAAKH,GACJ2B,GAAiB,2BAAIA","file":"component---src-templates-blog-post-js-9ed309070e7ac76a726d.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport PortableText from '@sanity/block-content-to-react';\r\nimport { HiArrowLeft } from 'react-icons/hi';\r\n\r\nimport HeroHeader from '../components/HeroHeader';\r\nimport CtaBanner from '../components/CtaBanner';\r\nimport SEO from '../components/SEO';\r\n\r\nconst BlogPostStyles = styled.div`\r\n  .author-block {\r\n    padding: 3rem 0;\r\n    font-size: 2rem;\r\n    font-family: QuicksandReg;\r\n    @media (max-width: 605px) {\r\n      font-size: 1.8rem;\r\n    }\r\n    .wrapper {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n      @media (max-width: 605px) {\r\n        flex-direction: column;\r\n        width: 90%;\r\n      }\r\n    }\r\n    .author {\r\n      margin: 0 8rem;\r\n      @media (max-width: 927px) {\r\n        margin: 0 4rem;\r\n      }\r\n      @media (max-width: 605px) {\r\n        margin: 1rem 0;\r\n      }\r\n    }\r\n    .tags {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      @media (max-width: 835px) {\r\n        margin-top: 1rem;\r\n      }\r\n      @media (max-width: 605px) {\r\n        margin-top: 0;\r\n      }\r\n      .tag {\r\n        margin-right: 0.5rem;\r\n      }\r\n      .tag-link {\r\n        color: var(--accent-blue);\r\n        padding: 0.5rem;\r\n        margin: 0 1rem 0 0;\r\n        text-decoration: underline solid transparent;\r\n        transition: text-decoration 0.4s;\r\n        &:hover,\r\n        &:focus {\r\n          text-decoration: underline solid var(--accent-blue);\r\n          transition: text-decoration 0.4s;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .back-link {\r\n    font-size: 2rem;\r\n    display: inline-block;\r\n    padding-bottom: 3px;\r\n    color: var(--dark-green);\r\n    border-bottom: 1px solid var(--pale-grey-bg);\r\n    transition: border-bottom 0.4s;\r\n    position: relative;\r\n    top: -15px;\r\n    left: 5%;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      border-bottom: 1px solid var(--dark-green);\r\n      transition: border-bottom 0.4s;\r\n    }\r\n\r\n    .back-arrow {\r\n      position: relative;\r\n      top: 3px;\r\n      margin-right: 1rem;\r\n    }\r\n  }\r\n  .blog-post {\r\n    position: relative;\r\n    padding: 4rem 0;\r\n    background-color: var(--pale-grey-bg);\r\n    font-size: 1.5rem;\r\n    .wrapper {\r\n      width: 55%;\r\n      @media (max-width: 860px) {\r\n        width: 70%;\r\n      }\r\n      @media (max-width: 650px) {\r\n        width: 90%;\r\n      }\r\n    }\r\n\r\n    h2 {\r\n      font-family: MontserratSemiBold;\r\n      margin-bottom: 1.8rem;\r\n    }\r\n    h3 {\r\n      font-family: MontserratSemiBold;\r\n      margin: 1.5rem 0;\r\n    }\r\n    p {\r\n      line-height: 1.4;\r\n      margin-bottom: 3rem;\r\n    }\r\n    blockquote {\r\n      background-color: rgba(255, 136, 130, 0.8);\r\n      border-radius: 7px;\r\n      font-size: 2rem;\r\n      position: relative;\r\n      padding: 3rem 5rem 2.5rem 6rem;\r\n      width: 80%;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin: 0 auto 3.5rem;\r\n      &:hover span::before {\r\n        width: 100%;\r\n        transition: width 0.7s;\r\n        @media (max-width: 550px) {\r\n          width: 0%;\r\n        }\r\n      }\r\n      @media (max-width: 450px) {\r\n        font-size: 1.7rem;\r\n        padding-right: 3rem;\r\n        padding-left: 3rem;\r\n      }\r\n      p {\r\n        position: relative;\r\n        z-index: 10;\r\n        margin-bottom: 0;\r\n        padding-right: 20px;\r\n        &::before {\r\n          content: '“';\r\n          font-size: 5rem;\r\n          font-family: serif;\r\n          position: absolute;\r\n          left: -37px;\r\n          top: -20px;\r\n        }\r\n        &::after {\r\n          content: '”';\r\n          font-size: 5rem;\r\n          font-family: serif;\r\n          position: absolute;\r\n          right: -20px;\r\n          bottom: -37px;\r\n        }\r\n        @media (max-width: 450px) {\r\n          padding-right: 0;\r\n          &::before {\r\n            top: -40px;\r\n            left: -27px;\r\n          }\r\n          &::after {\r\n            right: -24px;\r\n            bottom: -56px;\r\n          }\r\n        }\r\n      }\r\n      span {\r\n        z-index: 10;\r\n        position: relative;\r\n        &::before {\r\n          content: '';\r\n          display: inline-block;\r\n          top: 0;\r\n          bottom: 0;\r\n          left: 0;\r\n          width: 0%;\r\n          background: var(--grey-bg);\r\n          opacity: 0.5;\r\n          border-radius: 4px;\r\n          position: absolute;\r\n          z-index: -1;\r\n          transition: width 0.7s;\r\n        }\r\n      }\r\n    }\r\n    figure {\r\n      max-width: 500px;\r\n      margin: 1rem auto 4rem;\r\n      border-left: 5px solid var(--accent-blue);\r\n      @media (max-width: 695px) {\r\n      }\r\n      @media (max-width: 350px) {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function BlogPost({ data }) {\r\n  const { post } = data;\r\n  const serializers = {\r\n    types: {\r\n      block: (props) => {\r\n        const { style = 'normal' } = props.node;\r\n\r\n        const customBlockquote = {\r\n          blockquote: (\r\n            <blockquote>\r\n              <p>\r\n                <span>{props.children}</span>\r\n              </p>\r\n            </blockquote>\r\n          ),\r\n        };\r\n        return (\r\n          customBlockquote[style] ||\r\n          PortableText.defaultSerializers.types.block(props)\r\n        );\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <SEO\r\n        title={post.postTitle}\r\n        description={post.postDescription}\r\n        image={post.heroImage.imageFile.asset.fluid.src}\r\n      />\r\n      <BlogPostStyles>\r\n        <HeroHeader\r\n          h1Heading={post.postTitle}\r\n          imageSrc={post.heroImage.imageFile.asset.fluid.src}\r\n          centerHeading\r\n        />\r\n        <section className=\"author-block\">\r\n          <div className=\"wrapper\">\r\n            <p className=\"date\">{post.publishDate}</p>\r\n            {post.author ? (\r\n              <p className=\"author\">\r\n                Written by{' '}\r\n                <Link to={post.authorLink} className=\"link\">\r\n                  {post.author}\r\n                </Link>\r\n              </p>\r\n            ) : (\r\n              <p className=\"author\">\r\n                Written by{' '}\r\n                <Link to=\"/about\" className=\"link\">\r\n                  Cassandra Brennan\r\n                </Link>\r\n              </p>\r\n            )}\r\n            <ul className=\"tags\">\r\n              <li className=\"tag\">Tags:</li>\r\n              {post.category.map((tag) => (\r\n                <li key={tag._key}>\r\n                  <Link className=\"tag-link\" to={`/blog/${tag.slug.current}`}>\r\n                    {tag.categoryName}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </section>\r\n        <section className=\"blog-post\">\r\n          <div className=\"back-to\">\r\n            <Link to=\"/response-art\" className=\"back-link\">\r\n              <HiArrowLeft className=\"back-arrow\" />\r\n              Back to Blog\r\n            </Link>\r\n          </div>\r\n          <div className=\"wrapper\">\r\n            <PortableText\r\n              blocks={post._rawPost}\r\n              serializers={serializers}\r\n              projectId={process.env.GATSBY_SANITY_PROJECT_ID}\r\n              dataset=\"production\"\r\n            />\r\n          </div>\r\n        </section>\r\n        <CtaBanner bannerHeading={post.ctaBannerReference.heading} />\r\n      </BlogPostStyles>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    post: sanityBlogPost(slug: { current: { eq: $slug } }) {\r\n      postTitle\r\n      postDescription\r\n      postTagline\r\n      publishDate(formatString: \"MMMM D, YYYY\")\r\n      author\r\n      authorLink\r\n      category {\r\n        _key\r\n        categoryName\r\n        slug {\r\n          current\r\n        }\r\n      }\r\n      heroImage {\r\n        imageFile {\r\n          asset {\r\n            fluid(maxWidth: 1200) {\r\n              ...GatsbySanityImageFluid\r\n            }\r\n          }\r\n        }\r\n        imageAltText\r\n      }\r\n      _rawPost(resolveReferences: { maxDepth: 5 })\r\n      ctaBannerReference {\r\n        heading\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeroHeaderStyles = styled.header`\r\n  height: 80vh;\r\n  background-image: ${(props) => `url(${props.image})`};\r\n  background-size: cover;\r\n  background-position: center;\r\n\r\n  .wrapper {\r\n    height: 100%;\r\n  }\r\n\r\n  .container,\r\n  .center-container {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    /* text-align: center; */\r\n  }\r\n\r\n  .center-container {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  .text-container {\r\n    background: var(--grey-bg);\r\n    padding: 2rem 4rem;\r\n    max-width: 600px;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 7rem;\r\n  }\r\n  p {\r\n    font-size: 1.8rem;\r\n    padding-left: 5px;\r\n    margin-top: 1.5rem;\r\n    line-height: 1.4;\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 568px) {\r\n    .container {\r\n      padding: 1rem 2rem;\r\n    }\r\n    .text-container {\r\n      padding: 1rem;\r\n    }\r\n    h1 {\r\n      font-size: 4rem;\r\n    }\r\n    p {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  @media (max-width: 360px) {\r\n    h1 {\r\n      font-size: 3rem;\r\n    }\r\n    p {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function HeroHeader({\r\n  h1Heading,\r\n  heroParagraph,\r\n  imageSrc,\r\n  centerHeading = false,\r\n}) {\r\n  return (\r\n    <HeroHeaderStyles image={imageSrc}>\r\n      <div className=\"wrapper\">\r\n        <div className={centerHeading ? 'center-container' : 'container'}>\r\n          <div className=\"text-container\">\r\n            <h1>{h1Heading}</h1>\r\n            {heroParagraph && <p>{heroParagraph}</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HeroHeaderStyles>\r\n  );\r\n}\r\n"],"sourceRoot":""}